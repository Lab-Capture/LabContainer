events { }

http {
  resolver 127.0.0.11;

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

  server {
    listen 80;
    server_name api.labcontainer.dev;
    return 301 https://api.labcontainer.dev$request_uri;
         }

   server {
    listen 443 ssl;
    server_name api.labcontainer.dev;
    
    ssl_certificate /ssl/cert.pem;
    ssl_certificate_key /ssl/key.key;
    
    access_log /var/log/nginx/data-access.log combined;

    location /admin/ {
       proxy_pass http://pgadmin_container:5050/;
       proxy_set_header X-Script-Name /admin;
       proxy_set_header Host $host;
       proxy_redirect off;
       }
    
    location /auth/ {
       proxy_pass http://auth:5000/;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect http://auth:5000/ $scheme://$http_host/;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
       }
    
    location /analytics/ {
       proxy_pass http://analytics:8000/;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect http://analytics:8000/ $scheme://$http_host/;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
       }

    # resolver 127.0.0.11 valid=10s;
    # resolver_timeout 5s;

    # Except url like /env/<container name>/<path>
    # Redirect to http://<container name>:8090/<path>
    location ~ ^/env/([^/]+)/socket\.io(.*) {
      set $container $1;
      set $path $2;
      proxy_pass http://$container:8090/socket.io$path$is_args$args;

      proxy_redirect                off;
      proxy_set_header              Host             $host;
      proxy_set_header              Port             $server_port;
      proxy_set_header              X-Real-IP        $remote_addr;
      proxy_set_header              X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header              X-NginX-Proxy    true;
      proxy_pass_request_headers    on;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  
    location ~ ^/env/([^/]+)/(.*)$ {
      set $container $1;
      set $path $2;
      proxy_pass http://$container:8090/$path;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy false;
      

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
   }
    
}